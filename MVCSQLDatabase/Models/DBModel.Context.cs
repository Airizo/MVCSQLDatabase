//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCSQLDatabase.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBModels : DbContext
    {
        public DBModels()
            : base("name=DBModels")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Proposal> Proposals { get; set; }
    
        public virtual int crud_Proposal_Delete(Nullable<int> proposal_Uid)
        {
            var proposal_UidParameter = proposal_Uid.HasValue ?
                new ObjectParameter("Proposal_Uid", proposal_Uid) :
                new ObjectParameter("Proposal_Uid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crud_Proposal_Delete", proposal_UidParameter);
        }
    
        public virtual ObjectResult<crud_Proposal_Select_Result> crud_Proposal_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crud_Proposal_Select_Result>("crud_Proposal_Select");
        }
    
        public virtual int crud_Proposal_Update_Insert(Nullable<int> proposal_Uid, string prime_Contract, string proposal_Title, string client_Name, string client_Code, Nullable<decimal> total_Proposal_Amount, string manager_Name, Nullable<System.DateTime> start_Date, Nullable<System.DateTime> end_Date, string proposal_Number, string contract_Type)
        {
            var proposal_UidParameter = proposal_Uid.HasValue ?
                new ObjectParameter("Proposal_Uid", proposal_Uid) :
                new ObjectParameter("Proposal_Uid", typeof(int));
    
            var prime_ContractParameter = prime_Contract != null ?
                new ObjectParameter("Prime_Contract", prime_Contract) :
                new ObjectParameter("Prime_Contract", typeof(string));
    
            var proposal_TitleParameter = proposal_Title != null ?
                new ObjectParameter("Proposal_Title", proposal_Title) :
                new ObjectParameter("Proposal_Title", typeof(string));
    
            var client_NameParameter = client_Name != null ?
                new ObjectParameter("Client_Name", client_Name) :
                new ObjectParameter("Client_Name", typeof(string));
    
            var client_CodeParameter = client_Code != null ?
                new ObjectParameter("Client_Code", client_Code) :
                new ObjectParameter("Client_Code", typeof(string));
    
            var total_Proposal_AmountParameter = total_Proposal_Amount.HasValue ?
                new ObjectParameter("Total_Proposal_Amount", total_Proposal_Amount) :
                new ObjectParameter("Total_Proposal_Amount", typeof(decimal));
    
            var manager_NameParameter = manager_Name != null ?
                new ObjectParameter("Manager_Name", manager_Name) :
                new ObjectParameter("Manager_Name", typeof(string));
    
            var start_DateParameter = start_Date.HasValue ?
                new ObjectParameter("Start_Date", start_Date) :
                new ObjectParameter("Start_Date", typeof(System.DateTime));
    
            var end_DateParameter = end_Date.HasValue ?
                new ObjectParameter("End_Date", end_Date) :
                new ObjectParameter("End_Date", typeof(System.DateTime));
    
            var proposal_NumberParameter = proposal_Number != null ?
                new ObjectParameter("Proposal_Number", proposal_Number) :
                new ObjectParameter("Proposal_Number", typeof(string));
    
            var contract_TypeParameter = contract_Type != null ?
                new ObjectParameter("Contract_Type", contract_Type) :
                new ObjectParameter("Contract_Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crud_Proposal_Update_Insert", proposal_UidParameter, prime_ContractParameter, proposal_TitleParameter, client_NameParameter, client_CodeParameter, total_Proposal_AmountParameter, manager_NameParameter, start_DateParameter, end_DateParameter, proposal_NumberParameter, contract_TypeParameter);
        }

        internal IQueryable<crud_Proposal_Select_Result> crud_Proposal_Select_Result()
        {
            throw new NotImplementedException();
        }
    }
}
